@echo off
REM MetaGipsy Repository Cleanup Script (Windows)
REM Removes all development artifacts and backup files for professional GitHub release

echo.
echo ========================================
echo   METAGIPSY REPOSITORY CLEANUP
echo   Preparing for legendary GitHub release
echo ========================================
echo.

REM Work in current directory
echo Working in current directory: %CD%
echo.

REM Count files before cleanup
echo Analyzing repository structure...

REM Count backup files
set backup_count=0
for /f %%i in ('dir /s /b *.backup* 2^>nul ^| find /c /v ""') do set backup_count=%%i

REM Count version files
set version_count=0
for /f %%i in ('dir /s /b *_v*.ts *_v*.tsx 2^>nul ^| find /c /v ""') do set version_count=%%i

REM Count development artifacts
set artifact_count=0
for /f %%i in ('dir /s /b *.stablefix* *.fixtry *.storetest* *.stableversion 2^>nul ^| find /c /v ""') do set artifact_count=%%i

REM Count total files
set total_before=0
for /f %%i in ('dir /s /b 2^>nul ^| find /c /v ""') do set total_before=%%i

echo Files found:
echo   📂 Backup files: %backup_count%
echo   📂 Version files: %version_count%
echo   📂 Development artifacts: %artifact_count%
echo   📂 Total files: %total_before%
echo.

REM Calculate total files to clean
set /a total_to_clean=%backup_count%+%version_count%+%artifact_count%

REM Check if there's anything to clean
if %total_to_clean% EQU 0 (
    echo ✅ Repository is already clean! No artifacts found.
    echo 🚀 Ready for GitHub push!
    pause
    exit /b 0
)

REM Ask for confirmation
echo WARNING: This will permanently delete ALL backup and development artifact files!
echo.
echo Files to be deleted:
echo   ❌ All *.backup* files (%backup_count% files^)
echo   ❌ All *_v*.ts, *_v*.tsx version files (%version_count% files^)
echo   ❌ All *.stablefix*, *.fixtry, *.storetest files (%artifact_count% files^)
echo   ❌ Development page files
echo   ❌ Empty folders: docs\, packages\
echo   ❌ Build artifacts: dist\, node_modules\
echo.
set /p confirm="Are you sure you want to continue? (y/N): "

if /i not "%confirm%"=="y" (
    echo Cleanup cancelled. Repository unchanged.
    pause
    exit /b 0
)

echo.
echo Starting cleanup process...
echo.

REM Create backup directory for safety
if not exist "cleanup-backup" mkdir cleanup-backup
echo Created safety backup directory: cleanup-backup\
echo.

REM Delete backup files
echo [1/8] Deleting *.backup* files...
for /r . %%f in (*.backup*) do (
    echo Deleting: %%f
    del "%%f" /q 2>nul
)

REM Delete version files  
echo [2/8] Deleting version files (*_v*.ts, *_v*.tsx^)...
for /r . %%f in (*_v*.ts *_v*.tsx) do (
    echo Deleting: %%f
    del "%%f" /q 2>nul
)

REM Delete development artifacts
echo [3/8] Deleting development artifacts...
for /r . %%f in (*.stablefix* *.fixtry *.storetest* *.stableversion) do (
    echo Deleting: %%f
    del "%%f" /q 2>nul
)

REM Delete development page files
echo [4/8] Deleting development page files...
if exist "apps\web\src\pages" (
    for %%f in (apps\web\src\pages\analysis_page_*.ts) do (
        echo Deleting: %%f
        del "%%f" /q 2>nul
    )
    if exist "apps\web\src\pages\store_isolation_test.ts" (
        echo Deleting: apps\web\src\pages\store_isolation_test.ts
        del "apps\web\src\pages\store_isolation_test.ts" /q 2>nul
    )
)

REM Remove empty folders
echo [5/8] Removing empty folders...
if exist "docs" (
    echo Removing docs\ folder...
    rmdir "docs" /s /q 2>nul
)
if exist "packages\chess-engine" (
    echo Removing packages\chess-engine\ folder...
    rmdir "packages\chess-engine" /s /q 2>nul
)
if exist "packages\shared" (
    echo Removing packages\shared\ folder...
    rmdir "packages\shared" /s /q 2>nul
)
if exist "packages" (
    dir "packages" /b /a 2>nul | findstr "." >nul
    if errorlevel 1 (
        echo Removing empty packages\ folder...
        rmdir "packages" /s /q 2>nul
    )
)

REM Clean build artifacts
echo [6/8] Cleaning build artifacts...
if exist "apps\web\dist" (
    echo Removing web dist\ folder...
    rmdir "apps\web\dist" /s /q 2>nul
)
if exist "apps\api\dist" (
    echo Removing api dist\ folder...
    rmdir "apps\api\dist" /s /q 2>nul
)

REM Clean node_modules
echo [7/8] Cleaning node_modules...
for /d /r . %%d in (node_modules) do (
    if exist "%%d" (
        echo Removing: %%d
        rmdir "%%d" /s /q 2>nul
    )
)

REM Clean environment files
echo [8/8] Cleaning environment files...
if exist ".env" (
    echo Removing .env from root...
    del ".env" /q 2>nul
)
if exist "apps\api\.env" (
    echo Removing .env from apps\api...
    del "apps\api\.env" /q 2>nul
)
if exist "apps\web\.env" (
    echo Removing .env from apps\web...
    del "apps\web\.env" /q 2>nul
)

echo.
echo ========================================
echo   CLEANUP COMPLETED SUCCESSFULLY!
echo ========================================
echo.

REM Count remaining files
set total_after=0
for /f %%i in ('dir /s /b 2^>nul ^| find /c /v ""') do set total_after=%%i
set /a files_removed=%total_before%-%total_after%

echo Cleanup summary:
echo   📊 Files before: %total_before%
echo   📊 Files after: %total_after%
echo   🗑️  Files removed: %files_removed%
echo.

REM Verify cleanup
set backup_remaining=0
for /f %%i in ('dir /s /b *.backup* 2^>nul ^| find /c /v ""') do set backup_remaining=%%i

set version_remaining=0
for /f %%i in ('dir /s /b *_v*.ts *_v*.tsx 2^>nul ^| find /c /v ""') do set version_remaining=%%i

echo Verification:
echo   ✅ Backup files remaining: %backup_remaining% (should be 0^)
echo   ✅ Version files remaining: %version_remaining% (should be 0^)
echo.

echo ✅ Professional repository structure achieved:
echo   ✅ All backup files removed
echo   ✅ All version artifacts removed
echo   ✅ Development test files removed
echo   ✅ Empty folders removed
echo   ✅ Build artifacts cleaned
echo   ✅ Node modules cleaned
echo   ✅ Ready for professional GitHub release
echo.

echo Next steps:
echo   1. git add .
echo   2. git commit -m "🚀 Professional repository structure"
echo   3. git push origin main
echo   4. Make repository public on GitHub
echo.

echo 🎊 Repository is now enterprise-grade and ready for global developers! 🎊
echo 🚀 LEGENDARY CLEANUP COMPLETE! 🚀
echo.
pause